{"ast":null,"code":"import _toConsumableArray from\"/Users/catherinedeskur/Documents/GitHub/personal-assistant/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"/Users/catherinedeskur/Documents/GitHub/personal-assistant/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import{FancyButton,Container,Table,Text,TextBox,Div,RightButton}from'./styles';var RenderTable=function RenderTable(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),data=_useState2[0],dispatch=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),todoText=_useState4[0],setTodoText=_useState4[1];var _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),searchText=_useState6[0],setSearchText=_useState6[1];var action=function action(task,payload){switch(task){case'ADD':dispatch([].concat(_toConsumableArray(data),[payload]));break;case'DELETE':dispatch(data.filter(function(t){return payload!==t;}));break;case'CLEAR':dispatch([]);break;case'FILTER':return data.filter(function(t){return String(t).includes(payload);});default:break;}};return/*#__PURE__*/React.createElement(Container,null,/*#__PURE__*/React.createElement(Text,null,\" Enter a new task here \"),/*#__PURE__*/React.createElement(TextBox,{placeholder:\"to do\",value:todoText,onChange:function onChange(e){return setTodoText(e.target.value);}}),/*#__PURE__*/React.createElement(RightButton,{onClick:function onClick(){if(todoText){action('ADD',todoText);setTodoText('');}}},\"add task\"),/*#__PURE__*/React.createElement(Text,null,\" Search for a task here \"),/*#__PURE__*/React.createElement(TextBox,{placeholder:\"to do\",value:searchText,onChange:function onChange(e){return setSearchText(e.target.value);}}),data.length?/*#__PURE__*/React.createElement(Div,null,/*#__PURE__*/React.createElement(Text,null,\"Tasks left: \",data.length),/*#__PURE__*/React.createElement(Table,null,action('FILTER',searchText).map(function(task){return/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,task),/*#__PURE__*/React.createElement(\"td\",null,/*#__PURE__*/React.createElement(FancyButton,{onClick:function onClick(){return action('DELETE',task);}},\"complete\")));})),/*#__PURE__*/React.createElement(FancyButton,{onChange:function onChange(){return action('CLEAR');}},\"complete all\")):/*#__PURE__*/React.createElement(Text,null,\"No Work To do!\"));};export default RenderTable;","map":{"version":3,"sources":["/Users/catherinedeskur/Documents/GitHub/personal-assistant/src/RenderTable/index.js"],"names":["React","useState","FancyButton","Container","Table","Text","TextBox","Div","RightButton","RenderTable","data","dispatch","todoText","setTodoText","searchText","setSearchText","action","task","payload","filter","t","String","includes","e","target","value","length","map"],"mappings":"0WAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,OAASC,WAAT,CAAsBC,SAAtB,CAAiCC,KAAjC,CAAwCC,IAAxC,CAA8CC,OAA9C,CAAuDC,GAAvD,CAA4DC,WAA5D,KAA+E,UAA/E,CAGA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAAM,eACGR,QAAQ,CAAC,EAAD,CADX,wCAChBS,IADgB,eACVC,QADU,8BAEUV,QAAQ,CAAC,EAAD,CAFlB,yCAEhBW,QAFgB,eAENC,WAFM,8BAGcZ,QAAQ,CAAC,EAAD,CAHtB,yCAGhBa,UAHgB,eAGJC,aAHI,eAKxB,GAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,CAAEC,IAAF,CAAQC,OAAR,CAAqB,CAClC,OAAQD,IAAR,EACE,IAAK,KAAL,CACEN,QAAQ,8BAAKD,IAAL,GAAUQ,OAAV,GAAR,CACA,MACF,IAAK,QAAL,CACEP,QAAQ,CAACD,IAAI,CAACS,MAAL,CAAY,SAAAC,CAAC,QAAIF,CAAAA,OAAO,GAAKE,CAAhB,EAAb,CAAD,CAAR,CACA,MACF,IAAK,OAAL,CACET,QAAQ,CAAC,EAAD,CAAR,CACA,MACF,IAAK,QAAL,CACE,MAAOD,CAAAA,IAAI,CAACS,MAAL,CAAY,SAAAC,CAAC,QAAIC,CAAAA,MAAM,CAACD,CAAD,CAAN,CAAUE,QAAV,CAAmBJ,OAAnB,CAAJ,EAAb,CAAP,CACF,QACE,MAbJ,CAeD,CAhBD,CAkBA,mBACE,oBAAC,SAAD,mBACE,oBAAC,IAAD,gCADF,cAEE,oBAAC,OAAD,EAAS,WAAW,CAAC,OAArB,CAA6B,KAAK,CAAEN,QAApC,CACU,QAAQ,CAAE,kBAAAW,CAAC,QAAIV,CAAAA,WAAW,CAACU,CAAC,CAACC,MAAF,CAASC,KAAV,CAAf,EADrB,EAFF,cAIE,oBAAC,WAAD,EAAa,OAAO,CAAE,kBAAM,CAAC,GAAIb,QAAJ,CACzB,CAACI,MAAM,CAAC,KAAD,CAAOJ,QAAP,CAAN,CAAwBC,WAAW,CAAC,EAAD,CAAX,CAAiB,CAAC,CAD/C,aAJF,cAQE,oBAAC,IAAD,iCARF,cASE,oBAAC,OAAD,EAAS,WAAW,CAAC,OAArB,CAA6B,KAAK,CAAEC,UAApC,CACE,QAAQ,CAAE,kBAAAS,CAAC,QAAIR,CAAAA,aAAa,CAACQ,CAAC,CAACC,MAAF,CAASC,KAAV,CAAjB,EADb,EATF,CAWGf,IAAI,CAACgB,MAAL,cACC,oBAAC,GAAD,mBACE,oBAAC,IAAD,qBAAmBhB,IAAI,CAACgB,MAAxB,CADF,cAEA,oBAAC,KAAD,MAAQV,MAAM,CAAC,QAAD,CAAWF,UAAX,CAAN,CAA6Ba,GAA7B,CAAiC,SAACV,IAAD,qBACvC,2CACE,8BAAKA,IAAL,CADF,cAEE,2CACE,oBAAC,WAAD,EAAa,OAAO,CAAE,yBAAMD,CAAAA,MAAM,CAAC,QAAD,CAAWC,IAAX,CAAZ,EAAtB,aADF,CAFF,CADuC,EAAjC,CAAR,CAFA,cAYA,oBAAC,WAAD,EAAa,QAAQ,CAAE,0BAAMD,CAAAA,MAAM,CAAC,OAAD,CAAZ,EAAvB,iBAZA,CADD,cAiBC,oBAAC,IAAD,uBA5BJ,CADF,CAiCD,CAxDD,CA0DA,cAAeP,CAAAA,WAAf","sourcesContent":["import React, { useState } from 'react'\nimport { FancyButton, Container, Table, Text, TextBox, Div, RightButton } from './styles'\n\n\nconst RenderTable = () => {\n  const [ data, dispatch ] = useState([]) \n  const [ todoText, setTodoText ] = useState('')\n  const [ searchText, setSearchText ] = useState('')\n\n  const action = ( task, payload ) => {\n    switch (task) {\n      case 'ADD': \n        dispatch([...data,payload])\n        break\n      case 'DELETE': \n        dispatch(data.filter(t => payload !== t))\n        break\n      case 'CLEAR': \n        dispatch([])\n        break\n      case 'FILTER': \n        return data.filter(t => String(t).includes(payload))\n      default:\n        break\n    }\n  }\n\n  return (\n    <Container>\n      <Text> Enter a new task here </Text>\n      <TextBox placeholder='to do' value={todoText} \n                onChange={e => setTodoText(e.target.value)}/>\n      <RightButton onClick={() => {if (todoText) \n          {action('ADD',todoText); setTodoText('');}}}>\n        add task\n      </RightButton>\n      <Text> Search for a task here </Text>\n      <TextBox placeholder='to do' value={searchText} \n        onChange={e => setSearchText(e.target.value)} />\n      {data.length ? \n        <Div>\n          <Text>Tasks left: {data.length}</Text>\n        <Table>{action('FILTER', searchText).map((task) => \n          <tr>\n            <td>{task}</td>\n            <td>\n              <FancyButton onClick={() => action('DELETE', task)}>\n                complete\n              </FancyButton>\n            </td>\n          </tr>)}\n        </Table>\n        <FancyButton onChange={() => action('CLEAR')}>\n          complete all\n        </FancyButton>\n        </Div> : \n        <Text>No Work To do!</Text> \n      }\n    </Container>\n  )\n}\n\nexport default RenderTable\n"]},"metadata":{},"sourceType":"module"}